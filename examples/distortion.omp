; OM File Header - Saved 2021/05/05 13:48:12
; (6.18 :patc (om-make-point 10 160) (om-make-point 142 68) (om-make-point 594 817) "" 183 0 "2021/03/31 10:38:43" "2021/05/05 13:48:12")
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"optimal-sorting.omp\""))
(in-package :om)(load-lib-for (quote ("OM-Data")))(setf *om-current-persistent* (om-load-patch1 "distortion" (quote ((let ((box (om-load-boxcall (quote patch-box) "optimal-sorting" (quote ("elements" "examples" "optimal-sorting")) (quote nil) (om-make-point 32 118) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 58 694) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 204 60) (quote "distortion > 1 --> expansion$distortion < 1 --> compression$distortion = 1 --> no distortion") "" (om-make-point 293 405) nil (om-make-color 0.1404733 0.44938862 0.6792451) (om-make-font "Verdana" 12.0D0 :family "Verdana" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 110 30) (quote "distortion index") "" (om-make-point 136 384) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 90 387) (om-make-point 45 30) 0.75 "0.75" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DISTORTION" (quote distortion) (quote ((om-load-inputfun (quote input-funbox) "midicent list" "MC-LIST" (list 100 200 300 400 500)) (om-load-inputfun (quote input-funbox) "distortion index" "DIST" 1.125))) (om-make-point 54 417) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "DISTORTED SEQUENCE OF CHORDS" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 200)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 300)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 26 500) (om-make-point 508 192) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((3802 4104 4848 6086 6792) (3938 4020 4690 6226 6840) (3702 3944 4718 6010 6584) (3856 4520 5000 5992 6420) (4238 4574 4830 6230 6530) (3806 4368 4664 6438 6564) (3864 4220 5226 6404 6784) (3684 3924 5360 6552 6690) (4310 4670 5524 6492 7016) (3996 4796 5870 6528 6810) (3848 5076 5914 6372 6908) (4094 4770 5826 6210 6740) (3836 4770 5996 6380 6434) (4056 5402 6074 6332 6642) (4470 5566 5924 6486 6596) (4218 5338 5810 6628 6652) (4600 5450 5782 6596 6772) (4590 5276 5748 6378 6892) (4966 5166 6030 6192 6762) (5098 5456 5838 6072 6686) (4736 5424 5702 5716 6814) (4122 5462 5494 5604 6734) (4112 5200 5486 5716 6930) (4200 4956 5732 5816 7146) (3704 4472 5662 5748 6958) (3612 4636 5554 5680 6804) (3730 5058 5202 5348 6948) (4708 5174 5262 5512 7144) (4712 4766 5120 5590 6896) (4356 4362 4704 5656 6932) (3924 4260 4816 5396 6878) (3960 4162 5002 5660 7068) (3940 4316 5368 5996 7158) (3724 4464 5036 6142 7048) (3694 4568 4702 5976 7192) (3804 5124 5244 5754 6348) (3972 5192 5298 5506 6164) (4000 4814 5504 5588 6020) (3632 4910 5310 5342 5790) (4452 4814 5484 5514 5678) (4850 4990 5458 5568 5882) (4234 4304 5222 5472 6088) (4118 4254 5244 5404 6212) (3954 4202 4644 5186 6212) (3996 4202 4718 5016 6446) (3730 4160 4212 5246 6238) (3608 3850 4292 5234 6138) (3632 4020 4116 4722 5930) (4048 4196 4210 4676 5976) (3792 4178 4614 4868 5668) (3956 4248 4458 4962 5358) (4118 4140 4160 4720 5226) (3768 4080 4326 4520 4944) (3834 3868 3900 4484 5466) (4128 4152 4288 5444 5612) (3854 3930 4010 5770 5850) (3992 4364 5774 5858 6378) (4338 4986 5886 5934 6320) (3648 5454 5798 5938 6450) (4430 5978 6060 6500 6606) (4386 6062 6492 6628 6892) (4196 5688 6548 6552 6894) (4116 5460 6550 6766 6796) (4212 5078 6082 6734 6848) (4554 4896 6224 6458 6734) (4978 5000 5890 6622 6694) (4202 5776 6154 6364 7096) (5406 5988 6062 6466 7118) (5730 6410 6642 7028 7128) (4862 5610 6636 7044 7170) (3842 4944 6522 6958 7088) (4424 4564 6904 7154 7190) (4176 4178 6068 7052 7178) (3726 4068 6096 6784 6974) (4180 5900 5918 7064 7102))) :lonset (quote (0 200 400 600 800 1000 1200 1400 1600 1800 2000 2200 2400 2600 2800 3000 3200 3400 3600 3800 4000 4200 4400 4600 4800 5000 5200 5400 5600 5800 6000 6200 6400 6600 6800 7000 7200 7400 7600 7800 8000 8200 8400 8600 8800 9000 9200 9400 9600 9800 10000 10200 10400 10600 10800 11000 11200 11400 11600 11800 12000 12200 12400 12600 12800 13000 13200 13400 13600 13800 14000 14200 14400 14600 14800 15100)) :ldur (quote ((300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300))) :lvel (quote ((100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100))) :loffset (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 25) (om-make-point 1280 397) 0 1000 nil 1 (quote :osc-scoreplayer) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 4)) t nil nil t))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "A SEQUENCE OF CHORDS" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 200)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 300)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 20 188) (om-make-point 508 192) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((3867 4268 5261 6912 7853) (4049 4158 5051 7098 7918) (3734 4057 5088 6811 7575) (3939 4823 5463 6787 7356) (4447 4896 5237 7103 7504) (3873 4622 5017 7382 7548) (3948 4423 5764 7337 7843) (3708 4030 5943 7534 7718) (4545 5023 6162 7452 8153) (4126 5191 6625 7500 7877) (3928 5565 6683 7293 8007) (4256 5157 6566 7077 7783) (3912 5158 6791 7303 7377) (4204 6001 6895 7239 7653) (4758 6218 6697 7444 7592) (4420 5914 6544 7635 7666) (4931 6065 6507 7593 7826) (4916 5832 6462 7300 7986) (5418 5686 6838 7054 7814) (5594 6072 6580 6894 7713) (5112 6030 6401 6419 7883) (4294 6080 6123 6269 7775) (4280 5730 6111 6418 8037) (4396 5404 6440 6553 8326) (3735 4759 6347 6462 8074) (3612 4979 6202 6371 7870) (3770 5542 5733 5929 8062) (5074 5697 5812 6147 8322) (5080 5153 5623 6251 7992) (4604 4612 5069 6339 8040) (4029 4478 5218 5993 7968) (4078 4347 5466 6344 8221) (4051 4553 5954 6793 8341) (3763 4748 5512 6987 8194) (3722 4887 5067 6766 8386) (3869 5630 5788 6470 7260) (4092 5719 5861 6138 7017) (4131 5216 6136 6247 6825) (3639 5345 5878 5921 6516) (4734 5217 6109 6149 6369) (5265 5450 6074 6220 6640) (4443 4537 5760 6094 6914) (4287 4470 5789 6002 7079) (4070 4401 4988 5711 7081) (4126 4400 5087 5486 7391) (3771 4345 4412 5793 7114) (3608 3930 4519 5775 6980) (3641 4156 4285 5094 6705) (4195 4391 4411 5031 6766) (3852 4369 4950 5289 6355) (4071 4461 4741 5414 5942) (4288 4316 4344 5090 5764) (3820 4236 4564 4823 5388) (3910 3954 3998 4776 6086) (4302 4332 4515 6057 6280) (3936 4038 4144 6491 6596) (4121 4616 6497 6608 7301) (4581 5444 6645 6708 7225) (3662 6068 6529 6714 7398) (4703 6768 6877 7463 7606) (4646 6881 7452 7634 7987) (4392 6381 7528 7534 7988) (4286 6077 7530 7818 7859) (4413 5568 6906 7776 7927) (4868 5326 7095 7409 7775) (5434 5463 6650 7626 7723) (4400 6498 7003 7282 8259) (6004 6780 6879 7419 8289) (6437 7343 7652 8169 8300) (5281 6277 7644 8189 8358) (3921 5389 7492 8074 8249) (4695 4882 8003 8335 8384) (4366 4368 6889 8199 8367) (3765 4220 6926 7843 8095) (4370 6664 6687 8217 8266))) :lonset (quote (0 200 400 600 800 1000 1200 1400 1600 1800 2000 2200 2400 2600 2800 3000 3200 3400 3600 3800 4000 4200 4400 4600 4800 5000 5200 5400 5600 5800 6000 6200 6400 6600 6800 7000 7200 7400 7600 7800 8000 8200 8400 8600 8800 9000 9200 9400 9600 9800 10000 10200 10400 10600 10800 11000 11200 11400 11600 11800 12000 12200 12400 12600 12800 13000 13200 13400 13600 13800 14000 14200 14400 14600 14800 15100)) :ldur (quote ((300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300) (300 300 300 300 300))) :lvel (quote ((100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100))) :loffset (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 25) (om-make-point 1280 397) 0 1000 nil 1 (quote :osc-scoreplayer) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 4)) t nil nil t))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 374 75) (quote "distortion applies spectral distortion to a list of midicents, $given a distortion index d. In other words, it expands or $compresses the intervals in relation to the lowest midicent $value in the input list.") "" (om-make-point 14 57) nil (om-make-color 0.1404733 0.44938862 0.6792451) (om-make-font "Verdana" 12.0D0 :family "Verdana" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 202 30) (quote "[www.felipe-tovar-henao.com]") "" (om-make-point 79 34) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 166 42) (quote "OM-Data tutorials") "" (om-make-point 103 11) nil (om-make-color 0.1404733 0.44938862 0.6792451) (om-make-font "Arial" 18.0D0 :family "Arial" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 1 0 nil 0) (7 0 5 0 nil 0) (4 0 5 1 nil 0) (5 0 6 0 nil 0) (0 0 7 0 nil 0))) nil 6.18))
